{"version":3,"sources":["utils/getMetrics.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["metrics","currentMetricLocationIndex","_","require","metricTemplate","location","SEN","totalAttended","totalBoys","totalGirls","ageGroups","totalZeroToFive","totalSixToEight","totalNineToEleven","totalTwelveToFourteen","totalOverFourteen","empty","ethnicities","postcodes","allMetrics","incrementGender","gender","incrementAgeGroup","age","incrementEthnicities","ethnicity","index","findIndex","e","push","count","incrementPostcode","postcode","incrementSEN","condition","conditions","getMetricsForLocation","a","newLMetricLocation","length","generateMetrics","dataRow","type","maleorfemale","toString","toLowerCase","date","Date","birthYear","yearofbirth","replace","BirthYear","getFullYear","pleasechooseappropiateethnicityofyourchild","slice","doesyourchildhaveanyspecialeducationalneeds","ifyespleasesignifybelow","metricCalulator","allData","row","label","console","log","JSON","stringify","Home","useState","setAllData","showData","setShowData","name","accept","onChange","event","Papa","parse","target","files","header","transformHeader","skipEmptyLines","complete","results","data","onClick","className","src","theme","displayDataTypes","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAwBIA,EAEAC,E,6JA1BEC,EAAIC,EAAQ,IAEZC,EAAiB,CACnBC,SAAU,GACVL,QAAS,CACLM,IAAK,GACLC,cAAe,EACfC,UAAW,EACXC,WAAY,EACZC,UAAW,CACPC,gBAAiB,EACjBC,gBAAiB,EACjBC,kBAAmB,EACnBC,sBAAuB,EACvBC,kBAAmB,EACnBC,MAAO,GAEXC,YAAa,GACbC,UAAW,KAIbC,EAAa,GAObC,EAAkB,SAAAC,GACpB,IAAMb,EAAYR,EAAQQ,UACpBC,EAAaT,EAAQS,WACZ,MAAXY,EACArB,EAAQQ,UAAYA,EAAY,EAEhCR,EAAQS,WAAaA,EAAa,GAIpCa,EAAoB,SAAAC,GACtB,IAAMZ,EAAkBX,EAAQU,UAAUC,gBACpCC,EAAkBZ,EAAQU,UAAUE,gBACpCC,EAAoBb,EAAQU,UAAUG,kBACtCC,EAAwBd,EAAQU,UAAUI,sBAC1CC,EAAoBf,EAAQU,UAAUK,kBACtCC,EAAQhB,EAAQU,UAAUM,MAEhC,QAAO,GACH,KAAMO,GAAO,EACTvB,EAAQU,UAAUM,MAAQA,EAAQ,EAClC,MACJ,KAAMO,EAAM,EACRvB,EAAQU,UAAUC,gBAAkBA,EAAkB,EACtD,MACJ,KAAMY,EAAM,EACRvB,EAAQU,UAAUE,gBAAkBA,EAAkB,EACtD,MACJ,KAAMW,EAAM,GACRvB,EAAQU,UAAUG,kBAAoBA,EAAoB,EAC1D,MACJ,KAAMU,EAAM,GACRvB,EAAQU,UAAUI,sBAAwBA,EAAwB,EAClE,MACJ,KAAMS,EAAM,GACRvB,EAAQU,UAAUK,kBAAoBA,EAAoB,IAOhES,EAAuB,SAAAC,GACzB,IAAMR,EAAW,YAAOjB,EAAQiB,aAC1BS,EAAQxB,EAAEyB,UAAUV,GAAa,SAAAW,GAAC,OAAIA,EAAEH,YAAcA,KAE5D,IAAe,IAAXC,EACAT,EAAYY,KAAK,CAACJ,YAAWK,MAAO,QACjC,CACH,IAAMA,EAAQb,EAAYS,GAAOI,MACjCb,EAAYS,GAAOI,MAAQA,EAAQ,EAGvC9B,EAAQiB,YAAR,YAA0BA,IAGxBc,EAAoB,SAAAC,GACtB,IAAMd,EAAYlB,EAAQkB,UACpBQ,EAAQxB,EAAEyB,UAAUT,GAAW,SAAAU,GAAC,OAAIA,EAAEI,WAAaA,KAEzD,IAAe,IAAXN,EACAR,EAAUW,KAAK,CAACG,WAAUF,MAAO,QAC9B,CACH,IAAMA,EAAQZ,EAAUQ,GAAOI,MAC/BZ,EAAUQ,GAAOI,MAAQA,EAAQ,EAGrC9B,EAAQkB,UAAYA,GAGlBe,EAAe,SAAAC,GACjB,IAAMC,EAAanC,EAAQM,IACrBoB,EAAQxB,EAAEyB,UAAUQ,GAAY,SAAAP,GAAC,OAAIA,EAAEM,YAAcA,KAE3D,IAAe,IAAXR,EACAS,EAAWN,KAAK,CAACK,YAAWJ,MAAO,QAChC,CACH,IAAMA,EAAQK,EAAWT,GAAOI,MAChCK,EAAWT,GAAOI,MAAQA,EAAQ,EAGtC9B,EAAQM,IAAM6B,GAGZC,EAAqB,uCAAG,WAAM/B,GAAN,iBAAAgC,EAAA,6DAGV,KAFVX,EAAQxB,EAAEyB,UAAUR,GAAY,SAAAS,GAAC,OAAIA,EAAEvB,WAAaA,QAGhDiC,EADS,eACgBlC,IACZC,SAAWA,EAC9BJ,EAA6BkB,EAAWoB,OACxCpB,EAAWU,KAAKS,IAChBtC,EAAO,eAAOmB,EAAWlB,GAA4BD,UAC7CO,cAAgB,IAExBN,EAA6ByB,GAC7B1B,EAAO,eAAOmB,EAAWlB,GAA4BD,UAC7CO,cAAgBP,EAAQO,cAAgB,GAb1B,kBAgBnB,GAhBmB,2CAAH,sDAmBrBiC,EAAe,uCAAG,WAAMC,GAAN,uBAAAJ,EAAA,sEACDD,EAAsBK,EAAQC,MAD7B,iBAIgB,SADrBD,EAAQE,aAChBC,WAAWC,cAJE,gCAI+BzB,EAAgB,KAJ/C,+CAI4DA,EAAgB,KAJ5E,eAMd0B,EAAO,IAAIC,KACXC,EAAwD,KAA5CP,EAAQQ,YAAYC,QAAQ,OAAQ,IAAa,IAAOT,EAAQU,UAC5E5B,EAAMuB,EAAKM,cAAgBJ,EARb,UASd1B,EAAkBC,GATJ,eAWdE,EAAuF,KAA3EgB,EAAQY,2CAA2CH,QAAQ,OAAQ,IAAa,QAAUT,EAAQY,2CAA2CH,QAAQ,OAAQ,IAX3J,UAYd1B,EAAqBC,GAZP,eAcdO,EAAoD,KAAzCS,EAAQT,SAASkB,QAAQ,OAAQ,IAAa,QAAST,EAAQT,SAASkB,QAAQ,OAAQ,IAAII,MAAM,GAAI,GAAGT,cAdtG,UAedd,EAAkBC,GAfJ,WAiB0E,QAAzFS,EAAQc,4CAA4CV,cAAcK,QAAQ,MAAO,MAAkBT,EAAQe,wBAjB5F,kCAiB2HvB,EAAaQ,EAAQe,yBAjBhJ,QAmBpBrC,EAAWlB,GAA4BD,QAAvC,eAAqDA,GAnBjC,4CAAH,sDAsBRyD,EAAe,uCAAG,WAAOC,GAAP,mBAAArB,EAAA,oEAETqB,GAFS,4DAG6B,eAD7CC,EAFgB,SAGfC,MAAMV,QAAQ,OAAQ,IAAIL,cAHX,gCAIbL,EAAgBmB,GAJH,qJAQ3BE,QAAQC,IAAIC,KAAKC,UAAU7C,IAE3B0C,QAAQC,IAAI,+BACZD,QAAQC,IAAI,+BACZD,QAAQC,IAAI,+BACZD,QAAQC,IAAI,+BAEZD,QAAQC,IAAI3C,GAfe,kBAiBpBA,GAjBoB,gEAAH,sD,yBChGb8C,EApDF,WAAO,IAAD,EAEeC,mBAAS,IAFxB,mBAERR,EAFQ,KAECS,EAFD,OAGiBD,oBAAS,GAH1B,mBAGRE,EAHQ,KAGEC,EAHF,KAkBf,OACI,gCACI,8CAGA,sDAGA,uBACA,8BACI,uBACI3B,KAAK,OACL4B,KAAK,OACLC,OAAO,OACPC,SA3BM,SAACC,GACnBJ,GAAY,GAEZK,IAAKC,MAAMF,EAAMG,OAAOC,MAAM,GAAI,CAC9BC,QAAQ,EACRC,gBAAiB,SAAAnD,GAAC,OAAIA,EAAEsB,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIL,eAC9EmC,gBAAgB,EAChBC,SAAS,WAAD,4BAAE,WAAgBC,GAAhB,SAAA7C,EAAA,kEACN8B,EADM,SACWV,EAAgByB,EAAQC,MADnC,6EAAF,mDAAC,UAuBT,uBACA,wBAAQC,QAAS,kBAAMf,GAAY,IAAnC,wBACA,uBACA,qBAAKgB,UAAW,YAAhB,SACKjB,GAAYV,EAAQnB,OAAS,EAC1B,cAAC,IAAD,CACI+C,IAAK5B,EACL6B,MAAO,YACPC,kBAAkB,IAEpB,wCCrCPC,E,uKARP,OACI,qBAAKJ,UAAU,MAAf,SACI,cAAC,EAAD,U,GAJEK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0c67b03.chunk.js","sourcesContent":["const _ = require(\"lodash\");\r\n\r\nconst metricTemplate = {\r\n    location: \"\",\r\n    metrics: {\r\n        SEN: [],\r\n        totalAttended: 0,\r\n        totalBoys: 0,\r\n        totalGirls: 0,\r\n        ageGroups: {\r\n            totalZeroToFive: 0,\r\n            totalSixToEight: 0,\r\n            totalNineToEleven: 0,\r\n            totalTwelveToFourteen: 0,\r\n            totalOverFourteen: 0,\r\n            empty: 0\r\n        },\r\n        ethnicities: [],\r\n        postcodes: []\r\n    }\r\n};\r\n\r\nconst allMetrics = [];\r\n\r\nlet metrics;\r\n\r\nlet currentMetricLocationIndex;\r\n\r\n\r\nconst incrementGender = gender => {\r\n    const totalBoys = metrics.totalBoys;\r\n    const totalGirls = metrics.totalGirls;\r\n    if (gender === \"m\") {\r\n        metrics.totalBoys = totalBoys + 1;\r\n    } else {\r\n        metrics.totalGirls = totalGirls + 1;\r\n    }\r\n}\r\n\r\nconst incrementAgeGroup = age => {\r\n    const totalZeroToFive = metrics.ageGroups.totalZeroToFive;\r\n    const totalSixToEight = metrics.ageGroups.totalSixToEight;\r\n    const totalNineToEleven = metrics.ageGroups.totalNineToEleven;\r\n    const totalTwelveToFourteen = metrics.ageGroups.totalTwelveToFourteen;\r\n    const totalOverFourteen = metrics.ageGroups.totalOverFourteen;\r\n    const empty = metrics.ageGroups.empty;\r\n\r\n    switch(true) {\r\n        case (age < -1):\r\n            metrics.ageGroups.empty = empty + 1;\r\n            break;\r\n        case (age < 6):\r\n            metrics.ageGroups.totalZeroToFive = totalZeroToFive + 1;\r\n            break;\r\n        case (age < 9):\r\n            metrics.ageGroups.totalSixToEight = totalSixToEight + 1;\r\n            break;\r\n        case (age < 12):\r\n            metrics.ageGroups.totalNineToEleven = totalNineToEleven + 1;\r\n            break;\r\n        case (age < 15):\r\n            metrics.ageGroups.totalTwelveToFourteen = totalTwelveToFourteen + 1;\r\n            break;\r\n        case (age > 14):\r\n            metrics.ageGroups.totalOverFourteen = totalOverFourteen + 1;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst incrementEthnicities = ethnicity => {\r\n    const ethnicities = [...metrics.ethnicities];\r\n    const index = _.findIndex(ethnicities, e => e.ethnicity === ethnicity);\r\n\r\n    if (index === -1) {\r\n        ethnicities.push({ethnicity, count: 1})\r\n    } else {\r\n        const count = ethnicities[index].count;\r\n        ethnicities[index].count = count + 1;\r\n    }\r\n\r\n    metrics.ethnicities = [...ethnicities];\r\n}\r\n\r\nconst incrementPostcode = postcode => {\r\n    const postcodes = metrics.postcodes;\r\n    const index = _.findIndex(postcodes, e => e.postcode === postcode);\r\n\r\n    if (index === -1) {\r\n        postcodes.push({postcode, count: 1})\r\n    } else {\r\n        const count = postcodes[index].count;\r\n        postcodes[index].count = count + 1;\r\n    }\r\n\r\n    metrics.postcodes = postcodes;\r\n}\r\n\r\nconst incrementSEN = condition => {\r\n    const conditions = metrics.SEN;\r\n    const index = _.findIndex(conditions, e => e.condition === condition);\r\n\r\n    if (index === -1) {\r\n        conditions.push({condition, count: 1})\r\n    } else {\r\n        const count = conditions[index].count;\r\n        conditions[index].count = count + 1;\r\n    }\r\n\r\n    metrics.SEN = conditions;\r\n}\r\n\r\nconst getMetricsForLocation = async location => {\r\n    const index = _.findIndex(allMetrics, e => e.location === location);\r\n\r\n    if (index === - 1) {\r\n        const newLMetricLocation = {...metricTemplate};\r\n        newLMetricLocation.location = location;\r\n        currentMetricLocationIndex = allMetrics.length;\r\n        allMetrics.push(newLMetricLocation);\r\n        metrics = {...allMetrics[currentMetricLocationIndex].metrics};\r\n        metrics.totalAttended = 1;\r\n    } else {\r\n        currentMetricLocationIndex = index;\r\n        metrics = {...allMetrics[currentMetricLocationIndex].metrics};\r\n        metrics.totalAttended = metrics.totalAttended + 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nconst generateMetrics = async dataRow => {\r\n    const blah = await getMetricsForLocation(dataRow.type);\r\n\r\n    const gender = dataRow.maleorfemale;\r\n    gender.toString().toLowerCase() === \"male\" ? await incrementGender(\"m\") : await incrementGender(\"f\");\r\n\r\n    const date = new Date();\r\n    const birthYear = dataRow.yearofbirth.replace(/\\s+/g, '') === \"\" ? 3000 : dataRow.BirthYear;\r\n    const age = date.getFullYear() - birthYear;\r\n    await incrementAgeGroup(age);\r\n\r\n    const ethnicity = dataRow.pleasechooseappropiateethnicityofyourchild.replace(/\\s+/g, '') === \"\" ? \"empty\" : dataRow.pleasechooseappropiateethnicityofyourchild.replace(/\\s+/g, '');\r\n    await incrementEthnicities(ethnicity);\r\n\r\n    const postcode = dataRow.postcode.replace(/\\s+/g, '') === \"\" ? \"empty\": dataRow.postcode.replace(/\\s+/g, '').slice(0, -3).toLowerCase();\r\n    await incrementPostcode(postcode);\r\n\r\n    if ((dataRow.doesyourchildhaveanyspecialeducationalneeds.toLowerCase().replace(/\\s/g, \"\") === \"yes\") && dataRow.ifyespleasesignifybelow) await incrementSEN(dataRow.ifyespleasesignifybelow);\r\n\r\n    allMetrics[currentMetricLocationIndex].metrics = {...metrics};\r\n}\r\n\r\nexport const metricCalulator = async (allData) => {\r\n\r\n    for (const row of allData) {\r\n        if (row.label.replace(/\\s+/g, '').toLowerCase() === \"checkedin\") {\r\n            await generateMetrics(row);\r\n        }\r\n    }\r\n\r\n    console.log(JSON.stringify(allMetrics));\r\n\r\n    console.log('===========================');\r\n    console.log('===========================');\r\n    console.log('===========================');\r\n    console.log('===========================');\r\n\r\n    console.log(allMetrics);\r\n\r\n    return allMetrics\r\n}","import React, { useState } from 'react';\r\nimport ReactJson from 'react-json-view'\r\nimport { metricCalulator } from '../../utils/getMetrics';\r\nimport './Home-style.css';\r\nimport Papa from 'papaparse';\r\n\r\nconst Home = () => {\r\n\r\n    const [allData, setAllData] = useState([]);\r\n    const [showData, setShowData] = useState(false);\r\n\r\n    const changeHandler = (event) => {\r\n        setShowData(false);\r\n        // Passing file data (event.target.files[0]) to parse using Papa.parse\r\n        Papa.parse(event.target.files[0], {\r\n            header: true,\r\n            transformHeader: e => e.replace(/\\s+/g, '').replace('?', '').replace(',', '').toLowerCase(),\r\n            skipEmptyLines: true,\r\n            complete: async function (results) {\r\n                setAllData(await metricCalulator(results.data));\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                MKPA Metrics\r\n            </h1>\r\n            <h3>\r\n                Select csv file here\r\n            </h3>\r\n            <br />\r\n            <div>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    accept=\".csv\"\r\n                    onChange={changeHandler}\r\n                />\r\n            </div>\r\n            <br />\r\n            <button onClick={() => setShowData(true)}>Print Data</button>\r\n            <br />\r\n            <div className={\"leftAlign\"}>\r\n                {showData && allData.length > 0 ?\r\n                    <ReactJson\r\n                        src={allData}\r\n                        theme={\"hopscotch\"}\r\n                        displayDataTypes={false}\r\n                    />\r\n                    : <p> </p>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport Home from './components/Home/Home';\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"App\">\r\n                <Home />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}